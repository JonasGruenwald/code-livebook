{
  "name": "code-livebook",
  "displayName": "VS Code LiveBook",
  "description": "Use Elixir LiveBooks inside Visual Studio Code",
  "version": "1.2.0",
  "publisher": "JonasGruenwald",
  "repository": "https://github.com/JonasGruenwald/code-livebook",
  "license": "MIT",
  "icon": "./icons/icon_128x128@2x.png",
  "engines": {
    "vscode": "^1.87.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "extensionKind": [
    "workspace"
  ],
  "contributes": {
    "configuration": {
      "title": "Code LiveBook",
      "properties": {
        "code-livebook.autoStartServer": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Whether to automatically start the LiveBook server when opening a LiveBook.\nIf set to false, you need to specifiy a host and port manually.\nThe server will be started via escripts, so make sure you have the LiveBook executable installed via escripts.\nThe autostarted server terminates when the last LiveBook is closed."
        },
        "code-livebook.livebookPort": {
          "type": "number",
          "default": 0,
          "markdownDescription": "The port on which the LiveBook server should run (0 for a random port).\n\nIt's best to leave this at 0 unless you are running your own server, otherwise you might run into port conflicts when using autoStartServer"
        },
        "code-livebook.livebookHost": {
          "type": "string",
          "default": "http://localhost",
          "markdownDescription": "The host on which the LiveBook server is expected to run. (only applicable if autoStartServer is false)"
        },
        "code-livebook.livebookRuntime": {
          "type": "string",
          "default": "standalone",
          "markdownDescription": "The default runtime that notebooks will connect to.\nTo make notebooks attach to your project runtime, set this to `attached:NODE:COOKIE`.\nWith the node name and cookie value of your running node. You can start your local mix project as a node with `elixir --sname NODE --cookie COOKIE -S mix run --no-halt` "
        },
        "code-livebook.livebookExecutablePath": {
          "type": "string",
          "default": null,
          "markdownDescription": "The path to the LiveBook executable.\nThe default assumed path is `$HOME/.mix/escripts/livebook`.\nNote that this **must be the executable installed via escripts**, the desktop distribution of LiveBook is NOT supported.\n(only applicable if autoStartServer is true)"
        },
        "code-livebook.livebookEnvironment": {
          "type": "object",
          "default": {},
          "markdownDescription": "Specify additional environment variables to pass to the LiveBook server.\n\nYou may use this to set up livebook features like distribution, which can't be specified in the extension settings.\nYou can find a list of the possible values [here](https://github.com/livebook-dev/livebook/blob/main/README.md#environment-variables) \n\nEnvironment variables specified here will override any vay variables set by the extension, including those set through the other config keys.",
          "patternProperties": {
            ".*": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      }
    },
    "configurationDefaults": {
      "workbench.editorAssociations": {
        "{git,gitlens}:/**/*.livemd": "default"
      }
    },
    "customEditors": [
      {
        "viewType": "code-livebook.liveBookViewer",
        "displayName": "LiveBook Viewer",
        "selector": [
          {
            "filenamePattern": "*.livemd"
          }
        ],
        "priority": "default"
      }
    ],
    "languages": [
      {
        "id": "elixir-livebook",
        "extensions": [
          ".livemd"
        ],
        "icon": {
          "light": "./icons/livebook.svg",
          "dark": "./icons/livebook.svg"
        }
      }
    ]
  },
  "scripts": {
    "package": "pnpm vsce package --no-dependencies",
    "publish": "pnpm vsce publish --no-dependencies",
    "vscode:prepublish": "pnpm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "pnpm run compile && pnpm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@types/vscode": "^1.87.0",
    "@typescript-eslint/eslint-plugin": "^7.4.0",
    "@typescript-eslint/parser": "^7.4.0",
    "@vscode/test-cli": "^0.0.8",
    "@vscode/test-electron": "^2.3.9",
    "eslint": "^8.57.0",
    "typescript": "^5.3.3"
  }
}